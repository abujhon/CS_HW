Please edit this file by adding the solution commands on the line below the prompt.
Save and submit the completed file for your homework submission.

Command to extract the TarDocs.tar archive to the current directory:
tar -xvf TarDocs.tar
Command to create the Javaless_Doc.tar archive from the TarDocs/ directory, while excluding the TarDocs/Documents/Java directory:
tar -zcvf javaless_docs.tar.gz --exclude='Java' ./
Command to ensure Java/ is not in the new Javaless_Docs.tar archive:
tar -tvf javaless_docs.tar.gz | grep Java
Bonus

Command to create an incremental archive called logs_backup_tar.gz with only changed files to snapshot.file for the /var/log directory:
tar -cvvg snapshot.snar -f logs_backup.tar.gz /var/log 
Why wouldn't you use the options -x and -c at the same with tar?
-c is for -create -v is for -verbose -g is for -listed-incremental
Cron job for backing up the /var/log/auth.log file:
Brace expansion command to create the four subdirectories:
Paste your system.sh script edits below:
#!/bin/bash
tar cvvWf ~/logs_backup.tar.gz /var/log
3. Command to make the system.sh script executable:
chmod +x ./Scripts/system.sh


Bonus

Command to copy system to system-wide cron directory:
Command to return journalctl messages with priorities from emergency to error:
journalctl -p err -b
Command to check the disk usage of the system journal unit since the most recent boot:
journalctl --disk-usage --boot=-1
Command to remove all archived journal files except the most recent two:
journalctl --vacuum-files 2

Bonus

Command to filter all log messages with priority levels between zero and two, and save output to /home/sysadmin/Priority_High.txt:
journalctl -p 0..2 > /home/sysadmin/proriority_high.txt
Command to automate the last command in a daily cronjob:
Add the edits made to the crontab file below:
0 18 * * * journalctl -p 0..2 > /home/sysadmin/proriority_high.txt

Command to record all mail log messages, except for debug, to /var/log/mail.log:
Add the edits made to the configuration file below:

mail.*                          -/var/log/mail.log

Bonus

Command to record all boot log messages, except for info and debug, to /var/log/boot.log:
Add the edits made to the configuration file below:

dmesg.*                          -/var/log/boot.log

Run sudo nano /etc/logrotate.conf to edit the logrotate configuration file.
Configure a log rotation scheme that backs up authentication messages to the /var/log/auth.log.
Add your config file edits below:

$ cat /etc/logrotate.d/auth.log 
/var/log/auth.log {
    rotate 5
    daily
}

Command to verify auditd is active:
systemctl status auditd

3. Command using auditd to set rules for /etc/shadow, /etc/passwd and /var/log/auth.log:
Add the edits made to the rules file below:

/etc/audit/rules.d/audit.rules
rules .... 

4. Command to restart auditd:
sudo service auditd restart
5. Command to list all auditd rules:
sudo auditctl -l
6. Command to produce an audit report:
sudo auditctl -s
7. Create a user with sudo useradd attacker and produce an audit report that lists account modifications:
8. Command to use auditd to watch /var/log/cron:
sudo auditctl -w /var/log/cron 
9. Command to verify auditd rules:
sudo auditctl -l